from future import annotations


class MyTime():
    hours = None
    minutes = None
    seconds = None

    def __init__(self, hours, minutes, seconds):
        self.hours, self.minutes, self.seconds = hours, minutes, seconds
        self.timestamp = seconds + minutes * 60 + hours * 60 * 60

    def __eq__(self, other) -> bool:
        return self.timestamp == other.timestamp
        # ( self.hours == other.hours and self.minutes == other.minutes and self.seconds == other.seconds)   сравнивает значения и возвращается true

    def __ge__(self, other) -> bool:
        return self.timestamp >= other.timestamp

    def __lt__(self, other) -> bool:
        return self.timestamp < other.timestamp

    def __add__(self, other) -> int:
        timestamp = self.timestamp + other.timestamp
        hours = timestamp // (60 * 60)
        minutes = (timestamp % (60 * 60)) // 60
        seconds = timestamp % 60
        return MyTime(hours, minutes, seconds)  # self.__class__ вместо   MyTime


    def __str__(self):
        return f'MyTime {self.hours}:{self.minutes}:{self.seconds}'

    def __repr__(self):
        return f'MyTime {self.hours}:{self.minutes}:{self.seconds}'

    def __mul__(self,other):
        return f'MyTime {self.hours * 2}:{self.minutes *2 }:{self.seconds *2}'



if name == "__main__":
    time1 = MyTime(12, 20, 12)
    time2 = MyTime(12, 20, 1)
    print(time1 == time2)  # магические  методы явно не вызываются  print (time1.__eq__(time2))
    print(time1 + time2)
    time_mult = MyTime(10, 23, 12) #создали новый объект класса
    print(time_mult * 2)